function weakSolMatrices = makeHighOrderOrrSommerFeldMatrix ...
    (g,basisMat,weights,num)

    weakSolMatrices = zeros(num,size(basisMat,3),size(basisMat,3));
    gw              = zeros(size(g,1),1);
    
    % Making Orr-Sommerfeld matrices for eigenvalue problem...
    %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    for numg=1:num
       
        basisMatT = zeros(size(basisMat,2),size(basisMat,3));
        switch(numg)
            
            case 1                                       % psi_i*psi_j
                for k=1:size(g,1)
                    gw(k,1) = g(k,1)*weights(k,1); 
                    basisMatT(k,:) = basisMat(1,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3));
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
            case 2                                       % u*psi_i*psi_j
                for k=1:size(g,1) 
                    gw(k,1) = g(k,2)*weights(k,1);
                    basisMatT(k,:) = basisMat(1,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3));
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
            case 3                                       % u''*psi_i*psi_j
                for k=1:size(g,1)
                    gw(k,1) = g(k,3)*weights(k,1); 
                    basisMatT(k,:) = basisMat(1,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3));
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
            case 4                                       % psi''_i*psi_j
                for k=1:size(g,1)
                    gw(k,1) = g(k,1)*weights(k,1);
                    basisMatT(k,:) = basisMat(3,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3));
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
            case 5                                       % u*psi''_i*psi_j
                for k=1:size(g,1)
                    gw(k,1) = g(k,2)*weights(k,1); 
                    basisMatT(k,:) = basisMat(3,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3));    
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
            case 6                                       % psi''''_i*psi'_j
                for k=1:size(g,1)
                    gw(k,1) = g(k,1)*weights(k,1); 
                    basisMatT(k,:) = basisMat(5,k,:) .* gw(k,1);
                end
                weakSolMatrices(numg,:,:) = ...
                    transpose(basisMatT)*...
                    reshape(basisMat(1,:,:),...
                    size(basisMat,2),size(basisMat,3)); 
                weakSolMatrices(numg,:,:) = ...
                    transpose(reshape(weakSolMatrices(numg,:,:),...
                    size(basisMat,3),size(basisMat,3)));
                
        end    
        
    end
    
end